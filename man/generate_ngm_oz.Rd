% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate-ngm.R
\name{generate_ngm_oz}
\alias{generate_ngm_oz}
\title{Calculate next generation contact matrices from ABS data}
\usage{
generate_ngm_oz(
  state_name = NULL,
  lga_name = NULL,
  age_breaks,
  R_target,
  setting_transmission_matrix = NULL
)
}
\arguments{
\item{state_name}{target Australian state name in abbreviated form, such
as "QLD", "NSW", or "TAS"}

\item{lga_name}{target Australian local government area (LGA) name, such
as "Fairfield (C)".  See \code{\link[=abs_lga_lookup]{abs_lga_lookup()}} for list of lga names.}

\item{age_breaks}{vector depicting age values with the highest age depicted
as \code{Inf}. For example, c(seq(0, 85, by = 5), Inf)}

\item{R_target}{target reproduction number}

\item{setting_transmission_matrix}{default is NULL, which calculates the transmission
matrix using \code{get_setting_transmission_matrices(age_breaks)}. You can
provide your own transmission matrix, but its rows and columns must match
the number of rows and columns, and must be a list of one matrix for each
setting. See the output for \code{get_setting_transmission_matrices(age_breaks)}
to get a sense of the structure. See \code{\link[=get_setting_transmission_matrices]{get_setting_transmission_matrices()}}
for more detail.}
}
\description{
This function calculates a next generation matrix (NGM)
based on state or LGA data from the Australian Bureau of Statistics (ABS).
For full details see \code{\link[=generate_ngm]{generate_ngm()}}.
}
\examples{
# don't run as both together takes a long time to run
\dontrun{
ngm_nsw <- generate_ngm_oz(
  state_name = "NSW",
  age_breaks = c(seq(0, 85, by = 5), Inf),
  R_target = 1.5
)
ngm_fairfield <- generate_ngm_oz(
  lga_name = "Fairfield (C)",
  age_breaks = c(seq(0, 85, by = 5), Inf),
  R_target = 1.5
)
}
}
